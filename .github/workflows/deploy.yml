name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      PORT: ${{secrets.PORT}}
      MONGODB_URI: ${{secrets.MONGODB_URI}}
      BE_URL: ${{secrets.BE_URL}}
      FE_URL: ${{secrets.FE_URL}}
      IMAGE_BB_API_KEY: ${{secrets.IMAGE_BB_API_KEY}}
      REST_API_KEY: ${{secrets.REST_API_KEY}}
      KAKAO_APP_KEY: ${{secrets.KAKAO_APP_KEY}}
      CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      VULTR_HOST: ${{secrets.VULTR_HOST}}
      SSL_CERT_PATH: ${{secrets.SSL_CERT_PATH}}
      SSL_KEY_PATH: ${{secrets.SSL_KEY_PATH}}
      SSL_FULL_CERT_PATH: ${{secrets.SSL_FULL_CERT_PATH}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VULTR_SSH_KEY }}

      - name: Build Docker images
        run: |
          docker build -t simpang:latest -f Dockerfile .
          docker build -t nginx:latest -f Dockerfile.nginx .

      - name: Save Docker images
        run: |
          docker save simpang:latest -o simpang.tar
          docker save nginx:latest -o nginx.tar

      - name: Copy Docker image to Vultr server
        run: | 
          scp -o StrictHostKeyChecking=no ./simpang.tar ${{ secrets.VULTR_USERNAME }}@${{ secrets.VULTR_HOST }}:/home/${{ secrets.VULTR_USERNAME }}/docker-images/
          scp -o StrictHostKeyChecking=no ./nginx.tar ${{ secrets.VULTR_USERNAME }}@${{ secrets.VULTR_HOST }}:/home/${{ secrets.VULTR_USERNAME }}/docker-images/
          scp -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.VULTR_USERNAME }}@${{ secrets.VULTR_HOST }}:/home/${{ secrets.VULTR_USERNAME }}/docker-images/
          scp -o StrictHostKeyChecking=no ./nginx.conf ${{ secrets.VULTR_USERNAME }}@${{ secrets.VULTR_HOST }}:/home/${{ secrets.VULTR_USERNAME }}/docker-images/

      - name: SSH into Vultr server and deploy Docker container
        run: |
          ssh ${{ secrets.VULTR_USERNAME }}@${{ secrets.VULTR_HOST }} << 'EOF'
            docker load -i /home/${{ secrets.VULTR_USERNAME }}/docker-images/simpang.tar
            docker load -i /home/${{ secrets.VULTR_USERNAME }}/docker-images/nginx.tar
            cd /home/${{ secrets.VULTR_USERNAME }}/docker-images/
            docker-compose up -d
            docker image prune -f
          EOF
